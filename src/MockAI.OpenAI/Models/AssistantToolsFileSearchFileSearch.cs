/*
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * OpenAPI spec version: 2.1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace IO.Swagger.Models
{
    /// <summary>
    /// Overrides for the file search tool.
    /// </summary>
    [DataContract]
    public partial class AssistantToolsFileSearchFileSearch : IEquatable<AssistantToolsFileSearchFileSearch>
    { 
        /// <summary>
        /// The maximum number of results the file search tool should output. The default is 20 for gpt-4* models and 5 for gpt-3.5-turbo. This number should be between 1 and 50 inclusive.  Note that the file search tool may output fewer than &#x60;max_num_results&#x60; results. See the [file search tool documentation](/docs/assistants/tools/file-search/number-of-chunks-returned) for more information. 
        /// </summary>
        /// <value>The maximum number of results the file search tool should output. The default is 20 for gpt-4* models and 5 for gpt-3.5-turbo. This number should be between 1 and 50 inclusive.  Note that the file search tool may output fewer than &#x60;max_num_results&#x60; results. See the [file search tool documentation](/docs/assistants/tools/file-search/number-of-chunks-returned) for more information. </value>

        [Range(1, 50)]
        [DataMember(Name="max_num_results")]
        public int? MaxNumResults { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class AssistantToolsFileSearchFileSearch {\n");
            sb.Append("  MaxNumResults: ").Append(MaxNumResults).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            if (ReferenceEquals(null, obj)) return false;
            if (ReferenceEquals(this, obj)) return true;
            return obj.GetType() == GetType() && Equals((AssistantToolsFileSearchFileSearch)obj);
        }

        /// <summary>
        /// Returns true if AssistantToolsFileSearchFileSearch instances are equal
        /// </summary>
        /// <param name="other">Instance of AssistantToolsFileSearchFileSearch to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(AssistantToolsFileSearchFileSearch other)
        {
            if (ReferenceEquals(null, other)) return false;
            if (ReferenceEquals(this, other)) return true;

            return 
                (
                    MaxNumResults == other.MaxNumResults ||
                    MaxNumResults != null &&
                    MaxNumResults.Equals(other.MaxNumResults)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                // Suitable nullity checks etc, of course :)
                    if (MaxNumResults != null)
                    hashCode = hashCode * 59 + MaxNumResults.GetHashCode();
                return hashCode;
            }
        }

        #region Operators
        #pragma warning disable 1591

        public static bool operator ==(AssistantToolsFileSearchFileSearch left, AssistantToolsFileSearchFileSearch right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(AssistantToolsFileSearchFileSearch left, AssistantToolsFileSearchFileSearch right)
        {
            return !Equals(left, right);
        }

        #pragma warning restore 1591
        #endregion Operators
    }
}
