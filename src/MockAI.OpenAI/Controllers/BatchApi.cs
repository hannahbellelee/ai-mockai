/*
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * OpenAPI spec version: 2.1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Collections.Generic;
using Microsoft.AspNetCore.Mvc;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;
using IO.Swagger.Attributes;
using IO.Swagger.Security;
using Microsoft.AspNetCore.Authorization;
using IO.Swagger.Models;

namespace IO.Swagger.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class BatchApiController : ControllerBase
    { 
        /// <summary>
        /// Cancels an in-progress batch. The batch will be in status &#x60;cancelling&#x60; for up to 10 minutes, before changing to &#x60;cancelled&#x60;, where it will have partial results (if any) available in the output file.
        /// </summary>
        /// <param name="batchId">The ID of the batch to cancel.</param>
        /// <response code="200">Batch is cancelling. Returns the cancelling batch&#x27;s details.</response>
        [HttpPost]
        [Route("/v1/batches/{batch_id}/cancel")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("CancelBatch")]
        [SwaggerResponse(statusCode: 200, type: typeof(Batch), description: "Batch is cancelling. Returns the cancelling batch&#x27;s details.")]
        public virtual IActionResult CancelBatch([FromRoute][Required]string batchId)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(Batch));
            string exampleJson = null;
            exampleJson = "{\n  \"cancelled_at\" : 2,\n  \"metadata\" : { },\n  \"request_counts\" : {\n    \"total\" : 4,\n    \"completed\" : 7,\n    \"failed\" : 1\n  },\n  \"input_file_id\" : \"input_file_id\",\n  \"output_file_id\" : \"output_file_id\",\n  \"error_file_id\" : \"error_file_id\",\n  \"created_at\" : 6,\n  \"in_progress_at\" : 1,\n  \"expired_at\" : 9,\n  \"finalizing_at\" : 5,\n  \"completed_at\" : 2,\n  \"endpoint\" : \"endpoint\",\n  \"expires_at\" : 5,\n  \"cancelling_at\" : 3,\n  \"completion_window\" : \"completion_window\",\n  \"id\" : \"id\",\n  \"failed_at\" : 7,\n  \"errors\" : {\n    \"data\" : [ {\n      \"code\" : \"code\",\n      \"param\" : \"param\",\n      \"line\" : 0,\n      \"message\" : \"message\"\n    }, {\n      \"code\" : \"code\",\n      \"param\" : \"param\",\n      \"line\" : 0,\n      \"message\" : \"message\"\n    } ],\n    \"object\" : \"object\"\n  },\n  \"object\" : \"batch\",\n  \"status\" : \"validating\"\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<Batch>(exampleJson)
                        : default(Batch);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Creates and executes a batch from an uploaded file of requests
        /// </summary>
        /// <param name="body"></param>
        /// <response code="200">Batch created successfully.</response>
        [HttpPost]
        [Route("/v1/batches")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("CreateBatch")]
        [SwaggerResponse(statusCode: 200, type: typeof(Batch), description: "Batch created successfully.")]
        public virtual IActionResult CreateBatch([FromBody]BatchesBody body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(Batch));
            string exampleJson = null;
            exampleJson = "{\n  \"cancelled_at\" : 2,\n  \"metadata\" : { },\n  \"request_counts\" : {\n    \"total\" : 4,\n    \"completed\" : 7,\n    \"failed\" : 1\n  },\n  \"input_file_id\" : \"input_file_id\",\n  \"output_file_id\" : \"output_file_id\",\n  \"error_file_id\" : \"error_file_id\",\n  \"created_at\" : 6,\n  \"in_progress_at\" : 1,\n  \"expired_at\" : 9,\n  \"finalizing_at\" : 5,\n  \"completed_at\" : 2,\n  \"endpoint\" : \"endpoint\",\n  \"expires_at\" : 5,\n  \"cancelling_at\" : 3,\n  \"completion_window\" : \"completion_window\",\n  \"id\" : \"id\",\n  \"failed_at\" : 7,\n  \"errors\" : {\n    \"data\" : [ {\n      \"code\" : \"code\",\n      \"param\" : \"param\",\n      \"line\" : 0,\n      \"message\" : \"message\"\n    }, {\n      \"code\" : \"code\",\n      \"param\" : \"param\",\n      \"line\" : 0,\n      \"message\" : \"message\"\n    } ],\n    \"object\" : \"object\"\n  },\n  \"object\" : \"batch\",\n  \"status\" : \"validating\"\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<Batch>(exampleJson)
                        : default(Batch);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// List your organization&#x27;s batches.
        /// </summary>
        /// <param name="after">A cursor for use in pagination. &#x60;after&#x60; is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include after&#x3D;obj_foo in order to fetch the next page of the list. </param>
        /// <param name="limit">A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 20. </param>
        /// <response code="200">Batch listed successfully.</response>
        [HttpGet]
        [Route("/v1/batches")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("ListBatches")]
        [SwaggerResponse(statusCode: 200, type: typeof(ListBatchesResponse), description: "Batch listed successfully.")]
        public virtual IActionResult ListBatches([FromQuery]string after, [FromQuery]int? limit)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(ListBatchesResponse));
            string exampleJson = null;
            exampleJson = "{\n  \"first_id\" : \"batch_abc123\",\n  \"data\" : [ {\n    \"cancelled_at\" : 2,\n    \"metadata\" : { },\n    \"request_counts\" : {\n      \"total\" : 4,\n      \"completed\" : 7,\n      \"failed\" : 1\n    },\n    \"input_file_id\" : \"input_file_id\",\n    \"output_file_id\" : \"output_file_id\",\n    \"error_file_id\" : \"error_file_id\",\n    \"created_at\" : 6,\n    \"in_progress_at\" : 1,\n    \"expired_at\" : 9,\n    \"finalizing_at\" : 5,\n    \"completed_at\" : 2,\n    \"endpoint\" : \"endpoint\",\n    \"expires_at\" : 5,\n    \"cancelling_at\" : 3,\n    \"completion_window\" : \"completion_window\",\n    \"id\" : \"id\",\n    \"failed_at\" : 7,\n    \"errors\" : {\n      \"data\" : [ {\n        \"code\" : \"code\",\n        \"param\" : \"param\",\n        \"line\" : 0,\n        \"message\" : \"message\"\n      }, {\n        \"code\" : \"code\",\n        \"param\" : \"param\",\n        \"line\" : 0,\n        \"message\" : \"message\"\n      } ],\n      \"object\" : \"object\"\n    },\n    \"object\" : \"batch\",\n    \"status\" : \"validating\"\n  }, {\n    \"cancelled_at\" : 2,\n    \"metadata\" : { },\n    \"request_counts\" : {\n      \"total\" : 4,\n      \"completed\" : 7,\n      \"failed\" : 1\n    },\n    \"input_file_id\" : \"input_file_id\",\n    \"output_file_id\" : \"output_file_id\",\n    \"error_file_id\" : \"error_file_id\",\n    \"created_at\" : 6,\n    \"in_progress_at\" : 1,\n    \"expired_at\" : 9,\n    \"finalizing_at\" : 5,\n    \"completed_at\" : 2,\n    \"endpoint\" : \"endpoint\",\n    \"expires_at\" : 5,\n    \"cancelling_at\" : 3,\n    \"completion_window\" : \"completion_window\",\n    \"id\" : \"id\",\n    \"failed_at\" : 7,\n    \"errors\" : {\n      \"data\" : [ {\n        \"code\" : \"code\",\n        \"param\" : \"param\",\n        \"line\" : 0,\n        \"message\" : \"message\"\n      }, {\n        \"code\" : \"code\",\n        \"param\" : \"param\",\n        \"line\" : 0,\n        \"message\" : \"message\"\n      } ],\n      \"object\" : \"object\"\n    },\n    \"object\" : \"batch\",\n    \"status\" : \"validating\"\n  } ],\n  \"last_id\" : \"batch_abc456\",\n  \"has_more\" : true,\n  \"object\" : \"list\"\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<ListBatchesResponse>(exampleJson)
                        : default(ListBatchesResponse);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Retrieves a batch.
        /// </summary>
        /// <param name="batchId">The ID of the batch to retrieve.</param>
        /// <response code="200">Batch retrieved successfully.</response>
        [HttpGet]
        [Route("/v1/batches/{batch_id}")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("RetrieveBatch")]
        [SwaggerResponse(statusCode: 200, type: typeof(Batch), description: "Batch retrieved successfully.")]
        public virtual IActionResult RetrieveBatch([FromRoute][Required]string batchId)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(Batch));
            string exampleJson = null;
            exampleJson = "{\n  \"cancelled_at\" : 2,\n  \"metadata\" : { },\n  \"request_counts\" : {\n    \"total\" : 4,\n    \"completed\" : 7,\n    \"failed\" : 1\n  },\n  \"input_file_id\" : \"input_file_id\",\n  \"output_file_id\" : \"output_file_id\",\n  \"error_file_id\" : \"error_file_id\",\n  \"created_at\" : 6,\n  \"in_progress_at\" : 1,\n  \"expired_at\" : 9,\n  \"finalizing_at\" : 5,\n  \"completed_at\" : 2,\n  \"endpoint\" : \"endpoint\",\n  \"expires_at\" : 5,\n  \"cancelling_at\" : 3,\n  \"completion_window\" : \"completion_window\",\n  \"id\" : \"id\",\n  \"failed_at\" : 7,\n  \"errors\" : {\n    \"data\" : [ {\n      \"code\" : \"code\",\n      \"param\" : \"param\",\n      \"line\" : 0,\n      \"message\" : \"message\"\n    }, {\n      \"code\" : \"code\",\n      \"param\" : \"param\",\n      \"line\" : 0,\n      \"message\" : \"message\"\n    } ],\n    \"object\" : \"object\"\n  },\n  \"object\" : \"batch\",\n  \"status\" : \"validating\"\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<Batch>(exampleJson)
                        : default(Batch);            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
